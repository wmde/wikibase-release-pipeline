name: Build and test Wikibase and friends

on:
  workflow_dispatch:
    inputs:
      env_file:
        description: 'Environment file'
        required: true
        default: '.env' # only gets set on a "workflow_dispatch" run
  push:

env:
  env_file: ${{ github.event.inputs.env_file || '.env' }}

jobs:
  build_mediawiki:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Cache git_cache repos
        uses: actions/cache@v2
        env:
          cache-name: cache-mediawiki-git-repo-temp-bump
        with:
          path: git_cache
          key: cache-mediawiki-git-repo-temp-bump

      - name: Build Tarball
        run: bash build.sh mediawiki ${{ env.env_file }}

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/mediawiki.docker.tar.gz

  build_wikibase:
    runs-on: ubuntu-latest
    needs:
      - build_mediawiki
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Cache composer
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-composer
        with:
          path: cache
          key: cache-wikibase-composer

      - name: Cache git_cache repos
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-git-repo-temp-bump
        with:
          path: git_cache
          key: cache-wikibase-git-repo-temp-bump

      - name: Get dependency build artifacts
        uses: actions/download-artifact@v2
        with:
          name: BuildArtifacts
          path: artifacts/

      - name: Build Tarball
        run: bash build.sh wikibase ${{ env.env_file }}

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildMetadata
          if-no-files-found: error
          path: artifacts/build_metadata_wikibase.env

      - name: Archive tar production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/Wikibase.tar.gz

      - name: Archive base docker production artifact
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/wikibase.docker.tar.gz

  build_wikibase_bundle:
    runs-on: ubuntu-latest
    needs:
      - build_mediawiki
      - build_wikibase
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Cache composer
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-composer
        with:
          path: cache
          key: cache-wikibase-composer

      - name: Cache git_cache repos
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-git-repo-temp-bump
        with:
          path: git_cache
          key: cache-wikibase-git-repo-temp-bump

      - name: Get dependency build artifacts
        uses: actions/download-artifact@v2
        with:
          name: BuildArtifacts
          path: artifacts/

      - name: Build Bundle Docker Image
        run: bash build.sh wikibase_bundle ${{ env.env_file }}

      - name: Archive bundle docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/wikibase-bundle.docker.tar.gz

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildMetadata
          if-no-files-found: error
          path: artifacts/build_metadata_*.env

  build_quickstatements:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Build QuickStatements Image 
        id: download_step
        run: bash build.sh quickstatements ${{ env.env_file }}

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/quickstatements.docker.tar.gz

  build_queryservice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Cache queryservice service tar
        uses: actions/cache@v2
        env:
          cache-name: cache-wdqs-backend-git-repo
        with:
          path: cache
          key: cache-wdqs-backend-git-repo

      - name: Build QueryService Image 
        id: download_step
        run: bash build.sh queryservice ${{ env.env_file }}

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/wdqs.docker.tar.gz

  build_queryservice_ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Cache git_cache repos
        uses: actions/cache@v2
        env:
          cache-name: cache-wdqs-frontend-git-repo
        with:
          path: git_cache
          key: cache-wdqs-frontend-git-repo

      - name: Build QueryService UI
        run: bash build.sh queryservice-ui ${{ env.env_file }}

      - name: Archive metadata artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildMetadata
          if-no-files-found: error
          path: artifacts/build_metadata_wdqs_ui.env

      - name: Archive tar production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: ./artifacts/wdqs-frontend.tar.gz

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: ./artifacts/wdqs-frontend.docker.tar.gz

  build_elasticsearch:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}

      - name: Build Elasticsearch
        run: bash build.sh elasticsearch ${{ env.env_file }}

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: ./artifacts/elasticsearch.docker.tar.gz

  test_wikibase:
    strategy:
      fail-fast: false
      matrix:
        suite: [ repo, fedprops, repo-client, quickstatements, pingback, confirm-edit, elasticsearch ]
    needs:
      - build_wikibase_bundle
      - build_queryservice
      - build_elasticsearch
      - build_queryservice_ui
      - build_quickstatements
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Wikibase docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: BuildArtifacts
          path: artifacts/

      - name: Run Tests - ${{ matrix.suite }}
        run: make test SUITE=${{ matrix.suite }}

      - name: Report
        if: always()
        run: |
          cd test/reporter
          npm install
          SUITE=${{ matrix.suite }} node report.js

      - name: Archive docker test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: TestArtifacts
          path: |
            test/log
