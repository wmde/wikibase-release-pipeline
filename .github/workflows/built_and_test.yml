name: Build and test Wikibase and friends

on:
  workflow_dispatch:
    inputs:
      env_file:
        description: 'Environment file'
        required: true
        default: '.env' # only gets set on a "workflow_dispatch" run
  push:

env:
  env_file: ${{ github.event.inputs.env_file || '.env' }}
  DOCKER_CACHE_VERSION: 0

jobs:
  build_wikibase:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: wikibase-docker-cache-${{env.DOCKER_CACHE_VERSION}}-{hash}
          restore-keys: wikibase-docker-cache-${{env.DOCKER_CACHE_VERSION}}-

      - name: Cache composer
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-composer
        with:
          path: cache
          key: cache-wikibase-composer

      - name: Cache git_cache repos
        uses: actions/cache@v2
        env:
          cache-name: cache-wikibase-git-repo
        with:
          path: git_cache
          key: cache-wikibase-git-repo

      - name: Build Tarball
        run: bash build_github.sh wikibase ${{ env.env_file }}

      - name: Archive tar production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/Wikibase.tar.gz

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/wikibase.docker.tar.gz

  build_queryservice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: queryservice-docker-cache-${{env.DOCKER_CACHE_VERSION}}-{hash}
          restore-keys: queryservice-docker-cache-${{env.DOCKER_CACHE_VERSION}}-

      - name: Build QueryService Image 
        id: download_step
        run: bash build_github.sh queryservice ${{ env.env_file }}

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: artifacts/wdqs.docker.tar.gz

  build_queryservice_ui:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: c-py/action-dotenv-to-setenv@v2
        with:
          env-file: ${{ env.env_file }}
      - uses: satackey/action-docker-layer-caching@v0.0.8
        continue-on-error: true
        with:
          key: ui-docker-cache-${{env.DOCKER_CACHE_VERSION}}-{hash}
          restore-keys: ui-docker-cache-${{env.DOCKER_CACHE_VERSION}}-

      - name: Build QueryService UI
        run: bash build_github.sh queryservice-ui ${{ env.env_file }}

      - name: Archive tar production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: ./artifacts/wdqs-ui.tar.gz

      - name: Archive docker production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: BuildArtifacts
          if-no-files-found: error
          path: ./artifacts/wdqs-ui.docker.tar.gz

  test_wikibase:
    needs:
      - build_wikibase
      - build_queryservice
      - build_queryservice_ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get Wikibase docker image artifact
        uses: actions/download-artifact@v2
        with:
          name: BuildArtifacts
          path: artifacts/

      - name: Run Docker Tests
        run: make test

      - name: Archive docker test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: TestArtifacts
          path: |
            test_scripts/selenium/log
            test_scripts/log
