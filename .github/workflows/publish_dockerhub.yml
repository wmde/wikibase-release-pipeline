name: ðŸ“¦ðŸ›¸ Publish to Dockerhub

on:
  workflow_dispatch:
    inputs:
      workflow_run_id:
        description: 'Github Workflow run_id'
        required: true
        default: ''

env:
  DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
  # env_file: ${{ github.event.inputs.env_file }}
  # WORKFLOW_RUN_NUMBER: ${{ github.event.inputs.workflow_run_number }}

jobs:
  publish_docker:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        component:
          [
            # TODO: remove one of them with https://phabricator.wikimedia.org/T347000
            "wikibase",
            "wikibase-bundle",
            "elasticsearch",
            "wdqs",
            "wdqs-frontend",
            "wdqs-proxy",
            "quickstatements",
          ]

    steps:
      - uses: actions/checkout@v4

      - name: Debug
        shell: bash
        run: |
          cat variables.env

          echo "Workflow run id" ${{ inputs.workflow_run_id }}

      - name: Pull earlier build for cache reuse
        shell: bash
        run: |
          set -x

          source ./variables.env

          image_name="${{ matrix.component }}"
          run_id_tag="${{ inputs.workflow_run_id }}"
          version_tag="${WMDE_RELEASE_VERSION}"

          # TODO: cleanup with upcoming versioning scheme
          if [ "${{ matrix.component }}" = "wikibase" ]; then
            version_tag="${MEDIAWIKI_VERSION}-${WMDE_RELEASE_VERSION}"
          fi
          if [ "${{ matrix.component }}" = "wikibase-bundle" ]; then
            version_tag="${MEDIAWIKI_VERSION}-${WMDE_RELEASE_VERSION}"
          fi
          if [ "${{ matrix.component }}" = "wdqs" ]; then
            version_tag="${WDQS_VERSION}-${WMDE_RELEASE_VERSION}"
          fi
          if [ "${{ matrix.component }}" = "elasticsearch" ]; then
            version_tag="${ELASTICSEARCH_VERSION}-${WMDE_RELEASE_VERSION}"
          fi

          # get the built image from GHCR for the given workflow id
          docker pull ghcr.io/${{ github.repository_owner }}/wikibase/"$image_name":"$run_id_tag"

          # retag the image with the version string for dockerhub
          docker tag ghcr.io/${{ github.repository_owner }}/wikibase/"$image_name":"$run_id_tag" wikibase/"$image_name":"$version_tag"

          # push the image to dockerhub
          # docker push wikibase/"$image_name":"$version_tag"
