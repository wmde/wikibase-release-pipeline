<?php
/**
 * ----------------------------------------------------------------------------------------
 * This file is provided by the wikibase/wikibase docker image.
 * This file will be passed through envsubst which will replace "${DOLLAR}" with "$".
 * If you want to change MediaWiki or Wikibase settings then either mount a file over this
 * template and or run a different entrypoint.
 * ----------------------------------------------------------------------------------------
 */

## Database settings
## Environment variables will be substituted in here.
${DOLLAR}wgDBserver = "${DB_HOST}:${DB_PORT}";
${DOLLAR}wgDBname = "${DB_NAME}";
${DOLLAR}wgDBuser = "${DB_USER}";
${DOLLAR}wgDBpassword = "${DB_PASS}";

## Logs
## Save these logs inside the container
${DOLLAR}wgDebugLogGroups = array(
	'resourceloader' => '/var/log/mediawiki/resourceloader.log',
	'exception' => '/var/log/mediawiki/exception.log',
	'error' => '/var/log/mediawiki/error.log',
	'fatal' => '/var/log/mediawiki/fatal.log',
);

## Site Settings
# TODO pass in the rest of this with env vars?
${DOLLAR}wgServer = WebRequest::detectServer();
${DOLLAR}wgShellLocale = "en_US.utf8";
${DOLLAR}wgLanguageCode = "${MW_SITE_LANG}";
${DOLLAR}wgSitename = "${MW_SITE_NAME}";
${DOLLAR}wgMetaNamespace = "Project";
# Configured web paths & short URLs
# This allows use of the /wiki/* path
## https://www.mediawiki.org/wiki/Manual:Short_URL
${DOLLAR}wgScriptPath = "/w";        // this should already have been configured this way
${DOLLAR}wgArticlePath = "/wiki/${DOLLAR}1";

#Set Secret
${DOLLAR}wgSecretKey = "${MW_SECRET_KEY}";

wfLoadSkin( 'Vector' );

ini_set( 'display_errors', 1 );
${DOLLAR}wgShowExceptionDetails = true;
${DOLLAR}wgShowSQLErrors = true;
${DOLLAR}wgDebugDumpSql  = true;
${DOLLAR}wgShowDBErrorBacktrace = true;
${DOLLAR}wgDebugLogFile = '/var/log/mediawiki/debug.log';

${DOLLAR}wgEnableWikibaseRepo = false;
${DOLLAR}wgEnableWikibaseClient = true;

wfLoadExtension( 'WikibaseClient', "${DOLLAR}IP/extensions/Wikibase/extension-client.json" );
require_once "${DOLLAR}IP/extensions/Wikibase/client/ExampleSettings.php";

${DOLLAR}entitySources = [
    'repo' => [
        'entityNamespaces' => [ 'item' => 120, 'property' => 122 ],
        'repoDatabase' => 'my_wiki',
        'baseUri' => '${WIKIBASE_PUBLIC_URL}/entity/',
        'interwikiPrefix' => 'my_wiki',
        'rdfNodeNamespacePrefix' => 'wd',
        'rdfPredicateNamespacePrefix' => '',
        'type' => 'db'
    ],
];
${DOLLAR}wgWBClientSettings['entitySources'] = ${DOLLAR}entitySources;
${DOLLAR}wgWBClientSettings['itemAndPropertySourceName'] = 'repo';

${DOLLAR}wgWBClientSettings['repoUrl'] = '${WIKIBASE_PUBLIC_URL}:${WIKIBASE_PORT}';
${DOLLAR}wgWBClientSettings['repoScriptPath'] = '/w';
${DOLLAR}wgWBClientSettings['repoArticlePath'] = '/wiki/${DOLLAR}1';
${DOLLAR}wgWBClientSettings['siteLinkGroups'] = [ 'mywikigroup' ];
${DOLLAR}wgWBClientSettings['siteGlobalID'] = 'client_wiki';

${DOLLAR}wgEnableParserCache = false;
${DOLLAR}wgCachePages = false;
${DOLLAR}wgParserCacheType = CACHE_NONE;
${DOLLAR}wgMainCacheType = CACHE_NONE;

# Expecting a running Job Runner
${DOLLAR}wgJobRunRate = 0;

foreach (glob("LocalSettings.d/*.php") as ${DOLLAR}filename)
{

	if (strpos(${DOLLAR}filename, 'CirrusSearch') !== false) {
		continue;
	}

	if (strpos(${DOLLAR}filename, 'Elastic') !== false) {
		continue;
	}

	if (strpos(${DOLLAR}filename, 'WikibaseCirrusSearch') !== false) {
		continue;
	}

	if (strpos(${DOLLAR}filename, 'WikibaseLocalMedia') !== false) {
		continue;
	}

	if (strpos(${DOLLAR}filename, 'WikibaseEdtf') !== false) {
		continue;
	}

    include ${DOLLAR}filename;
}