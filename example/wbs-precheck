#!/bin/bash

# Minimum versions
MIN_DOCKER_VERSION="22.0"
MIN_DOCKER_COMPOSE_VERSION="2.10"

source template.env

# Function to compare version numbers using semver
semver_compare() {
    local version1 version2

    # Use awk to extract numeric parts of the version string
    version1=$(echo "$1" | awk -F. '{print $1*10000+$2*100+$3}')
    version2=$(echo "$2" | awk -F. '{print $1*10000+$2*100+$3}')

    if [ "$version1" -eq "$version2" ]; then
        return 0
    elif [ "$version1" -gt "$version2" ]; then
        return 1
    else
        return 2
    fi
}

# Function to check software version
check_version() {
    software="$1"
    min_version="$2"
    command_name="$3"
    
    if [ "$command_name" == "docker compose" ]; then
        version="$($command_name version --short)"
    else
        version="$("$command_name" --version | awk '{print $3}' | sed 's/,//' | awk -F. '{print $1"."$2"."$3}')"
    fi

    # Check if the version is numeric
    if [ -n "$version" ] && [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
        semver_compare "$version" "$min_version"
        result=$?

        if [ "$result" -eq 0 ]; then
            RESULTS+="‚úÖ PASS: $software version is $version (equal to $min_version)"$'\n'
        elif [ "$result" -eq 2 ]; then
            RESULTS+="‚ùå FAIL: $software version is $version (below $min_version)"$'\n'
        else
            RESULTS+="‚úÖ PASS: $software version is $version (above $min_version)"$'\n'
        fi
    else
        RESULTS+="‚ùå FAIL: Unable to determine $software version or not installed"$'\n'
    fi
}

# Function to check if the domain name can be resolved
check_domain_resolution() {
    domain="$1"
    
    # Use dig to obtain the resolved IP address
    ip_address=$(dig +short "$domain")

    if [ -n "$ip_address" ]; then
        RESULTS+="‚úÖ PASS: $domain found (resolves to $ip_address)"$'\n'
    else
        RESULTS+="‚ùå FAIL: $domain not found"$'\n'
    fi
}

# Store PASS/FAIL results
RESULTS=""

# Check Docker version
check_version "Docker" "$MIN_DOCKER_VERSION" "docker"
check_version "Docker Compose" "$MIN_DOCKER_COMPOSE_VERSION" "docker compose"

# Check domain resolution
check_domain_resolution "$WIKIBASE_HOST"

# Check architecture
if [ "$(uname -m)" == "x86_64" ] || [ "$(uname -m)" == "amd64" ]; then
    RESULTS+="‚úÖ PASS: Computer architecture is AMD64"$'\n'
else
    RESULTS+="‚ùå FAIL: Computer architecture is not AMD64 (ARM not currently supported)"$'\n'
fi

# Print results
echo "$RESULTS"

# Check if all requirements are met
if grep -q "FAIL" <<< "$RESULTS"; then
    echo "Please review above and WBS documentation to resolve issues."
else
    echo "‚úÖ All ready to run WBS! Run \`./wbs\` üöÄ"
fi
