#!/bin/bash

# Minimum versions
MIN_DOCKER_VERSION="24.0.1"
MIN_DOCKER_COMPOSE_VERSION="2.20"

# Function to check if a command is available
check_command() {
    command -v "$1" >/dev/null 2>&1
}

# Function to compare version numbers using semver
semver_compare() {
    if [[ $1 == $2 ]]; then
        return 0
    fi
    local IFS=.
    local i ver1=($1) ver2=($2)
    # fill empty fields in ver1 with zeros
    for ((i=${#ver1[@]}; i<${#ver2[@]}; i++)); do
        ver1[i]=0
    done
    for ((i=0; i<${#ver1[@]}; i++)); do
        if [[ -z ${ver2[i]} ]]; then
            # fill empty fields in ver2 with zeros
            ver2[i]=0
        fi
        if ((10#${ver1[i]} > 10#${ver2[i]})); then
            return 1
        fi
        if ((10#${ver1[i]} < 10#${ver2[i]})); then
            return 2
        fi
    done
    return 0
}

# Store PASS/FAIL results
RESULTS=""

# Check if Docker is installed
if check_command "docker"; then
    RESULTS+="PASS: Docker is installed"$'\n'

    # Check Docker version
    docker_version=$(docker --version | awk '{print $3}' | sed 's/,//')

    semver_compare "$docker_version" "$MIN_DOCKER_VERSION"
    result=$?

    if [ "$result" -eq 0 ]; then
        RESULTS+="PASS: Docker version is $docker_version (equal to $MIN_DOCKER_VERSION)"$'\n'
    elif [ "$result" -eq 2 ]; then
        RESULTS+="FAIL: Docker version is $docker_version (below $MIN_DOCKER_VERSION)"$'\n'
    else
        RESULTS+="PASS: Docker version is $docker_version (above $MIN_DOCKER_VERSION)"$'\n'
    fi

    # Check if Docker Compose is installed
    if check_command "docker" && check_command "docker compose"; then
        RESULTS+="PASS: Docker Compose is installed"$'\n'

        # Check Docker Compose version
        compose_version=$(docker compose version --short)

        semver_compare "$compose_version" "$MIN_DOCKER_COMPOSE_VERSION"
        result=$?

        if [ "$result" -eq 0 ]; then
            RESULTS+="PASS: Docker Compose version is $compose_version (equal to $MIN_DOCKER_COMPOSE_VERSION)"$'\n'
        elif [ "$result" -eq 2 ]; then
            RESULTS+="FAIL: Docker Compose version is $compose_version (below $MIN_DOCKER_COMPOSE_VERSION)"$'\n'
        else
            RESULTS+="PASS: Docker Compose version is $compose_version (above $MIN_DOCKER_COMPOSE_VERSION)"$'\n'
        fi
    else
        RESULTS+="FAIL: Docker Compose is not installed"$'\n'
    fi

    # Check architecture
    if [ "$(uname -m)" == "x86_64" ]; then
        RESULTS+="PASS: Computer architecture is AMD64"$'\n'
    else
        RESULTS+="FAIL: Computer architecture is not AMD64"$'\n'
    fi

else
    RESULTS+="FAIL: Docker is not installed"$'\n'
fi

# Print results
echo "$RESULTS"

# Check if all requirements are met
if grep -q "FAIL" <<< "$RESULTS"; then
    echo "Not all requirements passed."
else
    echo "âœ… All ready to run WBS! ðŸš€"
fi
