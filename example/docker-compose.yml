name: wikibase-suite-example

x-common-variables: &wikibase_variables
  MW_ADMIN_NAME: ${MW_ADMIN_NAME}
  MW_ADMIN_PASS: ${MW_ADMIN_PASS}
  MW_ADMIN_EMAIL: ${MW_ADMIN_EMAIL}
  MW_WG_SECRET_KEY: ${MW_SECRET_KEY}
  # To disable Elasticsearch and use default MediaWiki search functionality:
  # 1) Remove the elasticsearch service, and, 2) remove the MW_ELASTIC_* vars below
  MW_ELASTIC_HOST: elasticsearch
  MW_ELASTIC_PORT: 9200
  DB_SERVER: mysql:3306
  DB_USER: ${DB_USER}
  DB_PASS: ${DB_PASS}
  DB_NAME: ${DB_NAME}

services:
  wikibase:
    image: "${WIKIBASE_SUITE_WIKIBASE_BUNDLE_IMAGE_URL}"
    links:
      - mysql
    depends_on:
      - mysql
    restart: unless-stopped
    ports:
      - ${WIKIBASE_PORT}:80
    volumes:
      # This shares the configuration with jobrunner
      - wikibase-shared:/var/www/html/:rw
      # Uncomment the following line here and on the wikibase-jobrunner service below to mount your own LocalSettings.php file:
      # - ./LocalSettings.php:/var/www/html/LocalSettings.d/LocalSettings.override.php
      - quickstatements-data:/quickstatements/data
    environment:
      <<: *wikibase_variables
      MW_WG_ENABLE_UPLOADS:
      # Setting to 0 effectively disables jobs running after requests which is best when a jobrunner is used
      MW_WG_JOB_RUN_RATE: 0
      WIKIBASE_PINGBACK:
      QS_PUBLIC_SCHEME_HOST_AND_PORT: http://${QUICKSTATEMENTS_PUBLIC_HOST}
      VIRTUAL_HOST: "${WIKIBASE_PUBLIC_HOST}"
      LETSENCRYPT_HOST: "${WIKIBASE_PUBLIC_HOST}"
    healthcheck:
      test: [CMD, curl, --silent, --fail, http://localhost/wiki/Main_Page]
      interval: 10s
      start_period: 2m

  wikibase-jobrunner:
    image: "${WIKIBASE_SUITE_WIKIBASE_BUNDLE_IMAGE_URL}"
    command: /jobrunner-entrypoint.sh
    links:
      - mysql
    depends_on:
      - mysql
    restart: always
    volumes:
      - wikibase-shared:/shared/:ro
      # Uncomment the following line here and on wikibase to mount your own LocalSettings.php file:
      # - ./LocalSettings.php:/var/www/html/LocalSettings.d/LocalSettings.override.php
    environment:
      <<: *wikibase_variables
      MAX_JOBS: ${MAX_JOBS}

  mysql:
    image: "${MARIADB_IMAGE_URL}"
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
      MYSQL_RANDOM_ROOT_PASSWORD: yes
    healthcheck:
      test: [CMD, healthcheck.sh, --connect, --innodb_initialized]
      start_period: 1m
      interval: 20s
      timeout: 5s

  elasticsearch:
    image: "${WIKIBASE_SUITE_ELASTICSEARCH_IMAGE_URL}"
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true
    healthcheck:
      test: [CMD, curl, --silent, --fail, "http://localhost:9200"]
      interval: 10s
      start_period: 2m

  wdqs:
    image: "${WIKIBASE_SUITE_WDQS_IMAGE_URL}"
    restart: unless-stopped
    command: /runBlazegraph.sh
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    volumes:
      - wdqs-data:/wdqs/data
    environment:
      - WIKIBASE_HOST=wikibase
      - WDQS_HOST=wdqs
      - WDQS_PORT=9999
    healthcheck:
      test:
        - CMD
        - curl
        - --silent
        - --fail
        - "http://localhost:9999/bigdata/namespace/wdq/sparql"
      interval: 10s
      start_period: 2m

  wdqs-frontend:
    image: "${WIKIBASE_SUITE_WDQS_FRONTEND_IMAGE_URL}"
    restart: unless-stopped
    ports:
      - "${WDQS_FRONTEND_PORT}:80"
    depends_on:
      - wdqs-proxy
    environment:
      - WIKIBASE_HOST=wikibase
      - WDQS_HOST=wdqs-proxy
      - VIRTUAL_HOST=${WDQS_FRONTEND_PUBLIC_HOST}
      - LETSENCRYPT_HOST=${WDQS_FRONTEND_PUBLIC_HOST}
    healthcheck:
      test: [CMD, curl, --silent, --fail, http://localhost]
      interval: 10s
      start_period: 2m

  wdqs-proxy:
    image: "${WIKIBASE_SUITE_WDQS_PROXY_IMAGE_URL}"
    restart: unless-stopped
    environment:
      - PROXY_PASS_HOST=wdqs:9999
    depends_on:
      - wdqs

  wdqs-updater:
    image: "${WIKIBASE_SUITE_WDQS_IMAGE_URL}"
    restart: unless-stopped
    command: /runUpdate.sh
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    depends_on:
      - wdqs
      - wikibase
    environment:
      - WIKIBASE_HOST=wikibase
      - WDQS_HOST=wdqs
      - WDQS_PORT=9999
      # WIKIBASE_SCHEME can be set to 'https' if the updater should expect https concept uris

  quickstatements:
    image: "${WIKIBASE_SUITE_QUICKSTATEMENTS_IMAGE_URL}"
    restart: unless-stopped
    volumes:
      - quickstatements-data:/quickstatements/data
    ports:
      - "${QUICKSTATEMENTS_PORT}:80"
    depends_on:
      - wikibase
    environment:
      - WB_PROPERTY_NAMESPACE=122
      - "WB_PROPERTY_PREFIX=Property:"
      - WB_ITEM_NAMESPACE=120
      - "WB_ITEM_PREFIX=Item:"
      - OAUTH_CONSUMER_KEY
      - OAUTH_CONSUMER_SECRET
      - QUICKSTATEMENTS_HOST=${QUICKSTATEMENTS_PUBLIC_HOST}
      - QS_PUBLIC_SCHEME_HOST_AND_PORT=http://${QUICKSTATEMENTS_PUBLIC_HOST}
      - WB_PUBLIC_SCHEME_HOST_AND_PORT=http://${WIKIBASE_PUBLIC_HOST}
      - VIRTUAL_HOST=${QUICKSTATEMENTS_PUBLIC_HOST}
      - LETSENCRYPT_HOST=${QUICKSTATEMENTS_PUBLIC_HOST}
    healthcheck:
      test: [CMD, curl, --silent, --fail, http://localhost]
      interval: 10s
      start_period: 2m

  # Reverse Proxy and SSL services

  # See https://github.com/nginx-proxy/nginx-proxy/blob/main/docs/README.md for setup and options
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-proxy-certs:/etc/nginx/certs
      - nginx-proxy-vhost:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html

  acme-companion:
    image: nginxproxy/acme-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme-companion-data:/etc/acme.sh
    environment:
      DEFAULT_EMAIL: "${MW_ADMIN_EMAIL}"

volumes:
  wikibase-shared:
  LocalSettings:
  mysql-data:
  wdqs-data:
  elasticsearch-data:
  quickstatements-data:
  # Reverse Proxy and SSL
  nginx-proxy-certs:
  nginx-proxy-vhost:
  nginx-proxy-html:
  acme-companion-data:
