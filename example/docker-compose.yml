name: wikibase-suite-example

services:
  # --------------------------------------------------
  # A. CORE WIKIBASE SUITE SERVICES
  # --------------------------------------------------

  wikibase:
    image: ${WIKIBASE_SUITE_WIKIBASE_BUNDLE_IMAGE_URL}
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - ${WIKIBASE_PORT:-8880}:80
    volumes:
      - wikibase-config:/config
      - wikibase-images:/var/www/html/images
      - quickstatements-config:/quickstatements/data
    environment:
      SETUP_MW_WG_SERVER: http://${WIKIBASE_PUBLIC_HOST}
      SETUP_MW_ADMIN_NAME: ${SETUP_MW_ADMIN_NAME}
      SETUP_MW_ADMIN_PASS: ${SETUP_MW_ADMIN_PASS}
      SETUP_MW_ADMIN_EMAIL: ${SETUP_MW_ADMIN_EMAIL}
      SETUP_DB_SERVER: mysql:3306
      SETUP_DB_USER: ${SETUP_DB_USER}
      SETUP_DB_PASS: ${SETUP_DB_PASS}
      SETUP_DB_NAME: ${SETUP_DB_NAME}
      MW_ELASTIC_HOST: elasticsearch
      QUICKSTATEMENTS_PUBLIC_URL: http://${QUICKSTATEMENTS_PUBLIC_HOST}
      MW_WG_ENABLE_UPLOADS: false
      WIKIBASE_PINGBACK: false
      VIRTUAL_HOST: ${WIKIBASE_PUBLIC_HOST}
      LETSENCRYPT_HOST: ${WIKIBASE_PUBLIC_HOST}
    healthcheck:
      test: curl --silent --fail http://localhost/wiki/Main_Page
      interval: 10s
      start_period: 2m

  wikibase-jobrunner:
    image: ${WIKIBASE_SUITE_WIKIBASE_BUNDLE_IMAGE_URL}
    command: /jobrunner-entrypoint.sh
    depends_on:
      wikibase:
        condition: service_healthy
    restart: always
    volumes_from:
      - wikibase

  mysql:
    image: ${MARIADB_IMAGE_URL}
    restart: unless-stopped
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${SETUP_DB_NAME}
      MYSQL_USER: ${SETUP_DB_USER}
      MYSQL_PASSWORD: ${SETUP_DB_PASS}
      MYSQL_RANDOM_ROOT_PASSWORD: yes
    healthcheck:
      test: healthcheck.sh --connect --innodb_initialized
      start_period: 1m
      interval: 20s
      timeout: 5s

  # --------------------------------------------------
  # B. EXTRA WIKIBASE SUITE SERVICES
  # --------------------------------------------------

  # To disable Elasticsearch and use default MediaWiki search functionality remove
  # the elasticsearch service, and the MW_ELASTIC_* vars from wikibase_variables
  # at the top of this file.
  elasticsearch:
    image: ${WIKIBASE_SUITE_ELASTICSEARCH_IMAGE_URL}
    restart: unless-stopped
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true
    healthcheck:
      test: curl --silent --fail http://localhost:9200
      interval: 10s
      start_period: 2m

  wdqs:
    image: ${WIKIBASE_SUITE_WDQS_IMAGE_URL}
    command: /runBlazegraph.sh
    depends_on:
      wikibase:
        condition: service_healthy
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    volumes:
      - wdqs-data:/wdqs/data
    environment:
      WIKIBASE_HOST: wikibase
      WDQS_HOST: wdqs
      WDQS_PORT: 9999
    healthcheck:
      test: curl --silent --fail http://localhost:9999/bigdata/namespace/wdq/sparql
      interval: 10s
      start_period: 2m

  wdqs-updater:
    image: ${WIKIBASE_SUITE_WDQS_IMAGE_URL}
    command: /runUpdate.sh
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    environment:
      WIKIBASE_HOST: wikibase
      WDQS_HOST: wdqs
      WDQS_PORT: 9999

  wdqs-proxy:
    image: ${WIKIBASE_SUITE_WDQS_PROXY_IMAGE_URL}
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped
    environment:
      PROXY_PASS_HOST: wdqs:9999

  wdqs-frontend:
    image: ${WIKIBASE_SUITE_WDQS_FRONTEND_IMAGE_URL}
    depends_on:
      - wdqs-proxy
    restart: unless-stopped
    ports:
      - ${WDQS_FRONTEND_PORT:-8834}:80
    environment:
      WIKIBASE_HOST: wikibase
      WDQS_HOST: wdqs-proxy
      VIRTUAL_HOST: ${WDQS_FRONTEND_PUBLIC_HOST}
      LETSENCRYPT_HOST: ${WDQS_FRONTEND_PUBLIC_HOST}
    healthcheck:
      test: curl --silent --fail http://localhost
      interval: 10s
      start_period: 2m

  # QuickStatements requires publically accessible hostnames which route to the server running
  # this service configured and set in QUICKSTATEMENTS_PUBLIC_HOST and WIKIBASE_PUBLIC_HOST
  # (see .env) to enable authorization against the Wikibase instance.
  quickstatements:
    image: ${WIKIBASE_SUITE_QUICKSTATEMENTS_IMAGE_URL}
    depends_on:
      wikibase:
        condition: service_healthy
    restart: unless-stopped
    ports:
      - ${QUICKSTATEMENTS_PORT:-8840}:80
    volumes:
      - quickstatements-config:/quickstatements/data
    environment:
      WB_PROPERTY_NAMESPACE: 122
      WB_PROPERTY_PREFIX: "Property:"
      WB_ITEM_NAMESPACE: 120
      WB_ITEM_PREFIX: "Item:"
      QUICKSTATEMENTS_PUBLIC_URL: http://${QUICKSTATEMENTS_PUBLIC_HOST}
      WIKIBASE_PUBLIC_URL: http://${WIKIBASE_PUBLIC_HOST}
      VIRTUAL_HOST: ${QUICKSTATEMENTS_PUBLIC_HOST}
      LETSENCRYPT_HOST: ${QUICKSTATEMENTS_PUBLIC_HOST}
    healthcheck:
      test: curl --silent --fail http://localhost
      interval: 10s
      start_period: 2m

  # --------------------------------------------------
  # C. OPTIONAL REVERSE PROXY AND SSL SERVICES
  # --------------------------------------------------

  # See https://github.com/nginx-proxy/nginx-proxy/blob/main/docs/README.md for setup and options
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - nginx-proxy-certs:/etc/nginx/certs
      - nginx-proxy-vhost:/etc/nginx/vhost.d
      - nginx-proxy-html:/usr/share/nginx/html
    environment:
      DEFAULT_HOST: ${WIKIBASE_PUBLIC_HOST}

  # See https://github.com/nginx-proxy/acme-companion for setup and options
  acme-companion:
    image: nginxproxy/acme-companion
    volumes_from:
      - nginx-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - acme-companion-data:/etc/acme.sh
    environment:
      DEFAULT_EMAIL: ${SETUP_MW_ADMIN_EMAIL}

volumes:
  # A. CORE WIKIBASE SUITE SERVICES DATA
  wikibase-config:
  wikibase-images:
  mysql-data:
  # B. EXTRA WIKIBASE SUITE SERVICES DATA
  wdqs-data:
  elasticsearch-data:
  quickstatements-config:
  # C. OPTIONAL REVERSE PROXY AND SSL SERVICES DATA
  nginx-proxy-certs:
  nginx-proxy-vhost:
  nginx-proxy-html:
  acme-companion-data:
